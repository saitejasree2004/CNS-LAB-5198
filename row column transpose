#include <stdio.h>
#include <string.h>

// Function to encrypt the plaintext using Row Column Cipher
void encrypt(char *plaintext, int rows, int cols) {
    int len = strlen(plaintext);
    char ciphertext[rows][cols];

    // Initialize the matrix with '\0' characters
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            ciphertext[i][j] = '\0';
        }
    }

    // Fill the matrix with the characters from the plaintext
    int k = 0;
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols && k < len; j++) {
            ciphertext[i][j] = plaintext[k++];
        }
    }

    // Print the encrypted text column by column
    printf("Encrypted Text: ");
    for (int j = 0; j < cols; j++) {
        for (int i = 0; i < rows; i++) {
            if (ciphertext[i][j] != '\0') {
                printf("%c", ciphertext[i][j]);
            }
        }
    }
    printf("\n");
}

// Function to decrypt the ciphertext using Row Column Cipher
void decrypt(char *ciphertext, int rows, int cols) {
    int len = strlen(ciphertext);
    char decryptedText[rows][cols];

    // Initialize the matrix with '\0' characters
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            decryptedText[i][j] = '\0';
        }
    }

    // Fill the matrix with the characters from the ciphertext
    int k = 0;
    for (int j = 0; j < cols; j++) {
        for (int i = 0; i < rows && k < len; i++) {
            decryptedText[i][j] = ciphertext[k++];
        }
    }

    // Print the decrypted text row by row
    printf("Decrypted Text: ");
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            if (decryptedText[i][j] != '\0') {
                printf("%c", decryptedText[i][j]);
            }
        }
    }
    printf("\n");
}

int main() {
    int rows, cols;
    char text[100];

    printf("Enter the number of rows: ");
    scanf("%d", &rows);

    printf("Enter the number of columns: ");
    scanf("%d", &cols);

    // Flush the input buffer
    fflush(stdin);

    printf("Enter the text to encrypt: ");
    fgets(text, sizeof(text), stdin);

    // Remove the newline character from the input
    text[strcspn(text, "\n")] = '\0';

    // Encrypt the plaintext
    encrypt(text, rows, cols);



    return 0;
}
