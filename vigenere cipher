#include <stdio.h>
#include <string.h>
#include <ctype.h>

// Function to encrypt the plaintext using the Vigenère cipher
void vigenereEncrypt(char plaintext[], char keyword[]) {
    int ptLen = strlen(plaintext);
    int kwLen = strlen(keyword);
    char encrypted[ptLen];

    for (int i = 0, j = 0; i < ptLen; ++i) {
        char currentChar = plaintext[i];
        if (isalpha(currentChar)) {
            char key = keyword[j % kwLen];
            int shift = islower(key) ? key - 'a' : key - 'A';

            if (islower(currentChar)) {
                encrypted[i] = 'a' + (currentChar - 'a' + shift) % 26;
            } else {
                encrypted[i] = 'A' + (currentChar - 'A' + shift) % 26;
            }
            ++j;
        } else {
            encrypted[i] = currentChar;
        }
    }

    encrypted[ptLen] = '\0';
    printf("Encrypted Text: %s\n", encrypted);
}

// Function to decrypt the ciphertext using the Vigenère cipher
void vigenereDecrypt(char ciphertext[], char keyword[]) {
    int ctLen = strlen(ciphertext);
    int kwLen = strlen(keyword);
    char decrypted[ctLen];

    for (int i = 0, j = 0; i < ctLen; ++i) {
        char currentChar = ciphertext[i];
        if (isalpha(currentChar)) {
            char key = keyword[j % kwLen];
            int shift = islower(key) ? key - 'a' : key - 'A';

            if (islower(currentChar)) {
                decrypted[i] = 'a' + (currentChar - 'a' - shift + 26) % 26;
            } else {
                decrypted[i] = 'A' + (currentChar - 'A' - shift + 26) % 26;
            }
            ++j;
        } else {
            decrypted[i] = currentChar;
        }
    }

    decrypted[ctLen] = '\0';
    printf("Decrypted Text: %s\n", decrypted);
}

int main() {
    char plaintext[1000];
    char keyword[100];
    int choice;

    do {
        printf("\nVigenère Cipher Menu:\n");
        printf("1. Encrypt\n");
        printf("2. Decrypt\n");
        printf("3. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);
        getchar(); // Clear the input buffer

        switch (choice) {
            case 1:
                printf("Enter the plaintext: ");
                fgets(plaintext, sizeof(plaintext), stdin);

                printf("Enter the keyword: ");
                scanf("%s", keyword);

                // Remove newline character from fgets in plaintext
                size_t len = strlen(plaintext);
                if (len > 0 && plaintext[len - 1] == '\n') {
                    plaintext[len - 1] = '\0';
                }

                vigenereEncrypt(plaintext, keyword);
                break;

            case 2:
                printf("Enter the ciphertext: ");
                fgets(plaintext, sizeof(plaintext), stdin); // Reusing plaintext for ciphertext

                printf("Enter the keyword: ");
                scanf("%s", keyword);

                // Remove newline character from fgets in ciphertext
                len = strlen(plaintext);
                if (len > 0 && plaintext[len - 1] == '\n') {
                    plaintext[len - 1] = '\0';
                }

                vigenereDecrypt(plaintext, keyword);
                break;

            case 3:
                printf("Exiting the program. Goodbye!\n");
                break;

            default:
                printf("Invalid choice. Please enter a valid option.\n");
        }
    } while (choice != 3);

    return 0;
}
